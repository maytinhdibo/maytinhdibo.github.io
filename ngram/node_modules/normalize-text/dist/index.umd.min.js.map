{"version":3,"file":"index.umd.min.js","sources":["../node_modules/@bitty/pipe/dist/pipe.esm.js"],"sourcesContent":["/*!\n * @bitty/pipe v0.0.4\n * (c) Vitor Luiz Cavalcanti <vitorluizc@outlook.com> (https://vitorluizc.github.io/)\n * Released under the MIT License.\n */\n\n/**\n * Performs function composition in LTR (Left To Right) direction.\n * @example\n * const normalizeWhiteSpaces = text => name.replace(/\\s+/g, ' ').trim();\n *\n * const getInitials = pipe(\n *   normalizeWhiteSpaces,\n *   name => name.split(' ').map(name => name.charAt(0)),\n *   initials => initials.join('').toLocaleUpperCase()\n * );\n *\n * getInitials('Vitor Luiz Cavalcanti');\n * //=> \"VLC\"\n * @param {Function} fn - An arity N function. Its result is the argument of next one.\n * @param {...Function[]} fns - Functions of arity 1. Each one's result is next's argument.\n * @returns {Function}\n */\nfunction pipe(fn) {\n    var fns = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        fns[_i - 1] = arguments[_i];\n    }\n    return function () {\n        return fns.reduce(function (x, fn) { return fn(x); }, fn.apply(null, arguments));\n    };\n}\n\nexport default pipe;\n//# sourceMappingURL=pipe.esm.js.map\n"],"names":["pipe","fn","fns","_i","arguments","length","reduce","x","apply"],"mappings":";;;;;;;;;;;;;;;;AAuBA,SAASA,EAAKC,GAEV,IADA,IAAIC,EAAM,GACDC,EAAK,EAAGA,EAAKC,UAAUC,OAAQF,IACpCD,EAAIC,EAAK,GAAKC,UAAUD,GAE5B,OAAO,WACH,OAAOD,EAAII,QAAO,SAAUC,EAAGN,GAAM,OAAOA,EAAGM,KAAON,EAAGO,MAAM,KAAMJ"}